"""Add template_question table

Revision ID: 9d080ca9fe6c
Revises: fe0e69c8d4db
Create Date: 2025-10-03 16:38:42.892342

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9d080ca9fe6c"
down_revision: str | None = "fe0e69c8d4db"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

templatetype = sa.Enum("DOCUMENT", "FORM", name="templatetype")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "template_question",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_template_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["user_template_id"], ["user_template.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    templatetype.create(op.get_bind())
    op.add_column("user_template", sa.Column("type", templatetype, nullable=False, server_default="DOCUMENT"))
    op.alter_column(
        "user_template", "description", existing_type=sa.VARCHAR(), server_default=None, existing_nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_template",
        "description",
        existing_type=sa.VARCHAR(),
        server_default=sa.text("''::character varying"),
        existing_nullable=False,
    )
    op.drop_column("user_template", "type")
    op.drop_table("template_question")
    templatetype.drop(op.get_bind())
    # ### end Alembic commands ###
