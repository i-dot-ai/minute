// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from '@hey-api/client-next'
import type {
  ListTranscriptionsTranscriptionsGetData,
  ListTranscriptionsTranscriptionsGetResponses,
  ListTranscriptionsTranscriptionsGetErrors,
  CreateTranscriptionTranscriptionsPostData,
  CreateTranscriptionTranscriptionsPostResponses,
  CreateTranscriptionTranscriptionsPostErrors,
  CreateRecordingRecordingsPostData,
  CreateRecordingRecordingsPostResponses,
  CreateRecordingRecordingsPostErrors,
  DeleteTranscriptionTranscriptionsTranscriptionIdDeleteData,
  DeleteTranscriptionTranscriptionsTranscriptionIdDeleteResponses,
  DeleteTranscriptionTranscriptionsTranscriptionIdDeleteErrors,
  GetTranscriptionTranscriptionsTranscriptionIdGetData,
  GetTranscriptionTranscriptionsTranscriptionIdGetResponses,
  GetTranscriptionTranscriptionsTranscriptionIdGetErrors,
  SaveTranscriptionTranscriptionsTranscriptionIdPatchData,
  SaveTranscriptionTranscriptionsTranscriptionIdPatchResponses,
  SaveTranscriptionTranscriptionsTranscriptionIdPatchErrors,
  GetRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGetData,
  GetRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGetResponses,
  GetRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGetErrors,
  GetUserUsersMeGetData,
  GetUserUsersMeGetResponses,
  GetUserUsersMeGetErrors,
  UpdateDataRetentionUsersDataRetentionPatchData,
  UpdateDataRetentionUsersDataRetentionPatchResponses,
  UpdateDataRetentionUsersDataRetentionPatchErrors,
  ListMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGetData,
  ListMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGetResponses,
  ListMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGetErrors,
  CreateMinuteTranscriptionTranscriptionIdMinutesPostData,
  CreateMinuteTranscriptionTranscriptionIdMinutesPostResponses,
  CreateMinuteTranscriptionTranscriptionIdMinutesPostErrors,
  GetMinuteMinutesMinutesIdGetData,
  GetMinuteMinutesMinutesIdGetResponses,
  GetMinuteMinutesMinutesIdGetErrors,
  ListMinuteVersionsMinutesMinuteIdVersionsGetData,
  ListMinuteVersionsMinutesMinuteIdVersionsGetResponses,
  ListMinuteVersionsMinutesMinuteIdVersionsGetErrors,
  CreateMinuteVersionMinutesMinuteIdVersionsPostData,
  CreateMinuteVersionMinutesMinuteIdVersionsPostResponses,
  CreateMinuteVersionMinutesMinuteIdVersionsPostErrors,
  DeleteMinuteVersionMinuteVersionsMinuteVersionIdDeleteData,
  DeleteMinuteVersionMinuteVersionsMinuteVersionIdDeleteResponses,
  DeleteMinuteVersionMinuteVersionsMinuteVersionIdDeleteErrors,
  GetMinuteVersionMinuteVersionsMinuteVersionIdGetData,
  GetMinuteVersionMinuteVersionsMinuteVersionIdGetResponses,
  GetMinuteVersionMinuteVersionsMinuteVersionIdGetErrors,
  GetTemplatesTemplatesGetData,
  GetTemplatesTemplatesGetResponses,
  GetTemplatesTemplatesGetErrors,
  GetUserTemplatesUserTemplatesGetData,
  GetUserTemplatesUserTemplatesGetResponses,
  GetUserTemplatesUserTemplatesGetErrors,
  CreateUserTemplateUserTemplatesPostData,
  CreateUserTemplateUserTemplatesPostResponses,
  CreateUserTemplateUserTemplatesPostErrors,
  DeleteUserTemplateUserTemplatesTemplateIdDeleteData,
  DeleteUserTemplateUserTemplatesTemplateIdDeleteResponses,
  DeleteUserTemplateUserTemplatesTemplateIdDeleteErrors,
  GetUserTemplateUserTemplatesTemplateIdGetData,
  GetUserTemplateUserTemplatesTemplateIdGetResponses,
  GetUserTemplateUserTemplatesTemplateIdGetErrors,
  EditUserTemplateUserTemplatesTemplateIdPatchData,
  EditUserTemplateUserTemplatesTemplateIdPatchResponses,
  EditUserTemplateUserTemplatesTemplateIdPatchErrors,
  DuplicateUserTemplateUserTemplatesTemplateIdDuplicatePostData,
  DuplicateUserTemplateUserTemplatesTemplateIdDuplicatePostResponses,
  DuplicateUserTemplateUserTemplatesTemplateIdDuplicatePostErrors,
  DeleteChatsTranscriptionsTranscriptionIdChatDeleteData,
  DeleteChatsTranscriptionsTranscriptionIdChatDeleteResponses,
  DeleteChatsTranscriptionsTranscriptionIdChatDeleteErrors,
  ListChatTranscriptionsTranscriptionIdChatGetData,
  ListChatTranscriptionsTranscriptionIdChatGetResponses,
  ListChatTranscriptionsTranscriptionIdChatGetErrors,
  CreateChatTranscriptionsTranscriptionIdChatPostData,
  CreateChatTranscriptionsTranscriptionIdChatPostResponses,
  CreateChatTranscriptionsTranscriptionIdChatPostErrors,
  DeleteChatTranscriptionsTranscriptionIdChatChatIdDeleteData,
  DeleteChatTranscriptionsTranscriptionIdChatChatIdDeleteResponses,
  DeleteChatTranscriptionsTranscriptionIdChatChatIdDeleteErrors,
  GetChatTranscriptionsTranscriptionIdChatChatIdGetData,
  GetChatTranscriptionsTranscriptionIdChatChatIdGetResponses,
  GetChatTranscriptionsTranscriptionIdChatChatIdGetErrors,
} from './types.gen'
import { client as _heyApiClient } from './client.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * List Transcriptions
 * Get paginated metadata for transcriptions for the current user.
 */
export const listTranscriptionsTranscriptionsGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<ListTranscriptionsTranscriptionsGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    ListTranscriptionsTranscriptionsGetResponses,
    ListTranscriptionsTranscriptionsGetErrors,
    ThrowOnError
  >({
    url: '/transcriptions',
    ...options,
  })
}

/**
 * Create Transcription
 * Start a transcription job.
 */
export const createTranscriptionTranscriptionsPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateTranscriptionTranscriptionsPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateTranscriptionTranscriptionsPostResponses,
    CreateTranscriptionTranscriptionsPostErrors,
    ThrowOnError
  >({
    url: '/transcriptions',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Create Recording
 */
export const createRecordingRecordingsPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateRecordingRecordingsPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateRecordingRecordingsPostResponses,
    CreateRecordingRecordingsPostErrors,
    ThrowOnError
  >({
    url: '/recordings',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Delete Transcription
 * Delete a specific transcription by ID.
 */
export const deleteTranscriptionTranscriptionsTranscriptionIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteTranscriptionTranscriptionsTranscriptionIdDeleteData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteTranscriptionTranscriptionsTranscriptionIdDeleteResponses,
    DeleteTranscriptionTranscriptionsTranscriptionIdDeleteErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}',
    ...options,
  })
}

/**
 * Get Transcription
 * Get a specific transcription by ID.
 */
export const getTranscriptionTranscriptionsTranscriptionIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetTranscriptionTranscriptionsTranscriptionIdGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetTranscriptionTranscriptionsTranscriptionIdGetResponses,
    GetTranscriptionTranscriptionsTranscriptionIdGetErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}',
    ...options,
  })
}

/**
 * Save Transcription
 * Save or update a transcription.
 */
export const saveTranscriptionTranscriptionsTranscriptionIdPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    SaveTranscriptionTranscriptionsTranscriptionIdPatchData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    SaveTranscriptionTranscriptionsTranscriptionIdPatchResponses,
    SaveTranscriptionTranscriptionsTranscriptionIdPatchErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Get Recordings For Transcription
 */
export const getRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      GetRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGetData,
      ThrowOnError
    >
  ) => {
    return (options.client ?? _heyApiClient).get<
      GetRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGetResponses,
      GetRecordingsForTranscriptionTranscriptionsTranscriptionIdRecordingsGetErrors,
      ThrowOnError
    >({
      url: '/transcriptions/{transcription_id}/recordings',
      ...options,
    })
  }

/**
 * Get User
 */
export const getUserUsersMeGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetUserUsersMeGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUserUsersMeGetResponses,
    GetUserUsersMeGetErrors,
    ThrowOnError
  >({
    url: '/users/me',
    ...options,
  })
}

/**
 * Update Data Retention
 * Update the data retention period for the current user.
 *
 * Args:
 * data: Request body containing data_retention_days
 * current_user: The current authenticated user
 */
export const updateDataRetentionUsersDataRetentionPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<UpdateDataRetentionUsersDataRetentionPatchData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).patch<
    UpdateDataRetentionUsersDataRetentionPatchResponses,
    UpdateDataRetentionUsersDataRetentionPatchErrors,
    ThrowOnError
  >({
    url: '/users/data-retention',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * List Minutes For Transcription
 */
export const listMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGet =
  <ThrowOnError extends boolean = false>(
    options: Options<
      ListMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGetData,
      ThrowOnError
    >
  ) => {
    return (options.client ?? _heyApiClient).get<
      ListMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGetResponses,
      ListMinutesForTranscriptionTranscriptionTranscriptionIdMinutesGetErrors,
      ThrowOnError
    >({
      url: '/transcription/{transcription_id}/minutes',
      ...options,
    })
  }

/**
 * Create Minute
 */
export const createMinuteTranscriptionTranscriptionIdMinutesPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    CreateMinuteTranscriptionTranscriptionIdMinutesPostData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).post<
    CreateMinuteTranscriptionTranscriptionIdMinutesPostResponses,
    CreateMinuteTranscriptionTranscriptionIdMinutesPostErrors,
    ThrowOnError
  >({
    url: '/transcription/{transcription_id}/minutes',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Get Minute
 */
export const getMinuteMinutesMinutesIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetMinuteMinutesMinutesIdGetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetMinuteMinutesMinutesIdGetResponses,
    GetMinuteMinutesMinutesIdGetErrors,
    ThrowOnError
  >({
    url: '/minutes/{minutes_id}',
    ...options,
  })
}

/**
 * List Minute Versions
 */
export const listMinuteVersionsMinutesMinuteIdVersionsGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ListMinuteVersionsMinutesMinuteIdVersionsGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    ListMinuteVersionsMinutesMinuteIdVersionsGetResponses,
    ListMinuteVersionsMinutesMinuteIdVersionsGetErrors,
    ThrowOnError
  >({
    url: '/minutes/{minute_id}/versions',
    ...options,
  })
}

/**
 * Create Minute Version
 */
export const createMinuteVersionMinutesMinuteIdVersionsPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    CreateMinuteVersionMinutesMinuteIdVersionsPostData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).post<
    CreateMinuteVersionMinutesMinuteIdVersionsPostResponses,
    CreateMinuteVersionMinutesMinuteIdVersionsPostErrors,
    ThrowOnError
  >({
    url: '/minutes/{minute_id}/versions',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Delete Minute Version
 */
export const deleteMinuteVersionMinuteVersionsMinuteVersionIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteMinuteVersionMinuteVersionsMinuteVersionIdDeleteData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteMinuteVersionMinuteVersionsMinuteVersionIdDeleteResponses,
    DeleteMinuteVersionMinuteVersionsMinuteVersionIdDeleteErrors,
    ThrowOnError
  >({
    url: '/minute_versions/{minute_version_id}',
    ...options,
  })
}

/**
 * Get Minute Version
 */
export const getMinuteVersionMinuteVersionsMinuteVersionIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetMinuteVersionMinuteVersionsMinuteVersionIdGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetMinuteVersionMinuteVersionsMinuteVersionIdGetResponses,
    GetMinuteVersionMinuteVersionsMinuteVersionIdGetErrors,
    ThrowOnError
  >({
    url: '/minute_versions/{minute_version_id}',
    ...options,
  })
}

/**
 * Get Templates
 * Get metadata for all templates.
 */
export const getTemplatesTemplatesGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetTemplatesTemplatesGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetTemplatesTemplatesGetResponses,
    GetTemplatesTemplatesGetErrors,
    ThrowOnError
  >({
    url: '/templates',
    ...options,
  })
}

/**
 * Get User Templates
 */
export const getUserTemplatesUserTemplatesGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetUserTemplatesUserTemplatesGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUserTemplatesUserTemplatesGetResponses,
    GetUserTemplatesUserTemplatesGetErrors,
    ThrowOnError
  >({
    url: '/user-templates',
    ...options,
  })
}

/**
 * Create User Template
 */
export const createUserTemplateUserTemplatesPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<CreateUserTemplateUserTemplatesPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    CreateUserTemplateUserTemplatesPostResponses,
    CreateUserTemplateUserTemplatesPostErrors,
    ThrowOnError
  >({
    url: '/user-templates',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Delete User Template
 */
export const deleteUserTemplateUserTemplatesTemplateIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteUserTemplateUserTemplatesTemplateIdDeleteData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteUserTemplateUserTemplatesTemplateIdDeleteResponses,
    DeleteUserTemplateUserTemplatesTemplateIdDeleteErrors,
    ThrowOnError
  >({
    url: '/user-templates/{template_id}',
    ...options,
  })
}

/**
 * Get User Template
 */
export const getUserTemplateUserTemplatesTemplateIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUserTemplateUserTemplatesTemplateIdGetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetUserTemplateUserTemplatesTemplateIdGetResponses,
    GetUserTemplateUserTemplatesTemplateIdGetErrors,
    ThrowOnError
  >({
    url: '/user-templates/{template_id}',
    ...options,
  })
}

/**
 * Edit User Template
 */
export const editUserTemplateUserTemplatesTemplateIdPatch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    EditUserTemplateUserTemplatesTemplateIdPatchData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).patch<
    EditUserTemplateUserTemplatesTemplateIdPatchResponses,
    EditUserTemplateUserTemplatesTemplateIdPatchErrors,
    ThrowOnError
  >({
    url: '/user-templates/{template_id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Duplicate User Template
 */
export const duplicateUserTemplateUserTemplatesTemplateIdDuplicatePost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DuplicateUserTemplateUserTemplatesTemplateIdDuplicatePostData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).post<
    DuplicateUserTemplateUserTemplatesTemplateIdDuplicatePostResponses,
    DuplicateUserTemplateUserTemplatesTemplateIdDuplicatePostErrors,
    ThrowOnError
  >({
    url: '/user-templates/{template_id}/duplicate',
    ...options,
  })
}

/**
 * Delete Chats
 */
export const deleteChatsTranscriptionsTranscriptionIdChatDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteChatsTranscriptionsTranscriptionIdChatDeleteData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteChatsTranscriptionsTranscriptionIdChatDeleteResponses,
    DeleteChatsTranscriptionsTranscriptionIdChatDeleteErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}/chat',
    ...options,
  })
}

/**
 * List Chat
 */
export const listChatTranscriptionsTranscriptionIdChatGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    ListChatTranscriptionsTranscriptionIdChatGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    ListChatTranscriptionsTranscriptionIdChatGetResponses,
    ListChatTranscriptionsTranscriptionIdChatGetErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}/chat',
    ...options,
  })
}

/**
 * Create Chat
 */
export const createChatTranscriptionsTranscriptionIdChatPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    CreateChatTranscriptionsTranscriptionIdChatPostData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).post<
    CreateChatTranscriptionsTranscriptionIdChatPostResponses,
    CreateChatTranscriptionsTranscriptionIdChatPostErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}/chat',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Delete Chat
 * Delete a specific transcription by ID.
 */
export const deleteChatTranscriptionsTranscriptionIdChatChatIdDelete = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteChatTranscriptionsTranscriptionIdChatChatIdDeleteData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteChatTranscriptionsTranscriptionIdChatChatIdDeleteResponses,
    DeleteChatTranscriptionsTranscriptionIdChatChatIdDeleteErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}/chat/{chat_id}',
    ...options,
  })
}

/**
 * Get Chat
 */
export const getChatTranscriptionsTranscriptionIdChatChatIdGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetChatTranscriptionsTranscriptionIdChatChatIdGetData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetChatTranscriptionsTranscriptionIdChatChatIdGetResponses,
    GetChatTranscriptionsTranscriptionIdChatChatIdGetErrors,
    ThrowOnError
  >({
    url: '/transcriptions/{transcription_id}/chat/{chat_id}',
    ...options,
  })
}
